#!/usr/bin/env -S poetry run python

from pathlib import Path

import click
import torch

from srnn import train
from srnn.models.srcnn import SRCNN


@click.command()
@click.option("--epochs", default=128, help="number of epochs to train for")
@click.option("--batch-size", default=128)
@click.option("--save-interval", default=8, help="number of epochs between snapshots")
@click.option("--device", default="cuda:0", type=torch.device)
@click.option("--training-dataset", required=True, type=Path)
@click.option("--validation-dataset", required=True, type=Path)
@click.option("--checkpoint-folder", required=True, type=Path)
@click.option("--checkpoint-name", default="{model}@{epoch}.pth")
@click.option("--learning-rate", default=0.001)
@click.option("--resume", type=Path)
def cli(
    epochs: int,
    batch_size: int,
    save_interval: int,
    device,
    training_dataset: Path,
    validation_dataset: Path,
    checkpoint_folder: Path,
    checkpoint_name: str,
    learning_rate: float,
    resume: Path,
):
    checkpoint_folder.mkdir(exist_ok=True)

    model = SRCNN(channels=1).to(device)
    criterion = torch.nn.MSELoss()

    return train(
        model,
        criterion,
        epochs,
        batch_size,
        save_interval,
        device,
        training_dataset,
        validation_dataset,
        checkpoint_folder,
        checkpoint_name,
        learning_rate,
        resume,
    )


if __name__ == "__main__":
    cli()
