#!/usr/bin/env -S poetry run python

from pathlib import Path

import click
import h5py
from PIL import Image
from torchvision.transforms.functional import (
    InterpolationMode,
    center_crop,
    gaussian_blur,
    resize,
    to_tensor,
)
from tqdm import tqdm


def prepare(folder, lr_size, scale_factor, glob):
    files = list(folder.glob(glob))
    count = len(files)

    with h5py.File(folder.with_suffix(".h5"), "w", libver="latest") as f:
        hr_size = lr_size * scale_factor

        lr_dataset = f.create_dataset(
            "lr", dtype="f", shape=(count, 1, lr_size, lr_size)
        )
        hr_dataset = f.create_dataset(
            "hr", dtype="f", shape=(count, 1, hr_size, hr_size)
        )

        for i, image in enumerate(tqdm(files, unit="image")):
            y = Image.open(image).convert("YCbCr").getchannel("Y")

            hr = center_crop(y, hr_size)
            lr = resize(
                gaussian_blur(hr, kernel_size=3), lr_size, InterpolationMode.BICUBIC
            )

            lr_dataset[i] = to_tensor(lr).numpy()
            hr_dataset[i] = to_tensor(hr).numpy()


@click.command()
@click.option("--folder", required=True, type=Path)
@click.option("--lr-size", required=True, type=int)
@click.option("--scale-factor", required=True, type=int)
@click.option("--glob", default="*.png")
def cli(folder, lr_size, scale_factor, glob):
    return prepare(folder, lr_size, scale_factor, glob)


if __name__ == "__main__":
    cli()
